---
title: "Test"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
Create the data set for the RShiny Application
```{r}
library(lubridate)
reasses_target_samp =  c(1,0)
# The range for the total scores are 0 to 27, but only allowing for the selection of up to 2, because I want to subtract 2, from the post to show a reduction pre and post
phq_9_change_samp = c(2:27)
phq_9_pre = sample(phq_9_change_samp, size = 100, replace = TRUE)
## Minus 1 and 2 to reduce the effects
phq_9_post = sample(phq_9_change_samp, size = 50, replace = TRUE)-2
phq_9_post = sample(phq_9_change_samp, size = 50, replace = TRUE)-1
# GAD-7
gad_7_change_samp = c(2:27)
gad_7_pre = sample(gad_7_change_samp, size = 100, replace = TRUE)
## Minus 1 and 2 to reduce the effects
gad_7_post = sample(gad_7_change_samp, size = 50, replace = TRUE)-2
gad_7_post = sample(gad_7_change_samp, size = 50, replace = TRUE)-1

id = 1:100
reasses_bin = sample(reasses_target_samp, size = 100, replace = TRUE)
enroll_bin = sample(reasses_target_samp, size = 100, replace = TRUE)

date = c(rep("01-01-2019", 10), rep("02-01-2019", 10), rep("03-01-2019", 10), rep("04-01-2019", 10), rep("05-01-2019", 10), rep("06-01-2019", 10), rep("07-01-2019", 10), rep("08-01-2019", 10), rep("09-01-2019", 10), rep("10-01-2019", 10))

shiny_dat = data.frame(reasses_bin, enroll_bin, phq_9_pre, phq_9_post, gad_7_pre, gad_7_post, id, date)
### Create change scores for plot over time
shiny_dat$phq_9_change = shiny_dat$phq_9_post-phq_9_pre
shiny_dat$gad_7_change = shiny_dat$gad_7_post-gad_7_pre
### Create a change score

write.csv(shiny_dat, "shiny_dat.csv", row.names = FALSE)
```
Do a line plot for phq-9, GAD-7, and DAST Scores over time
```{r}
library(ggplot2)
library(dplyr)
library(lubridate)
setwd("~/Desktop/table_app/data")
shiny_dat = read.csv("shiny_dat.csv", header = TRUE)
mdy(shiny_dat$date)
shiny_dat_month = shiny_dat %>%
  mutate(date = mdy(date)) %>%
  select(date, phq_9_change, gad_7_change) 
shiny_dat_month
shiny_dat_month =  data.frame(outcome_change = c(rbind(phq_9_change, gad_7_change)), date = rep(shiny_dat_month$date, 2), outcome_type = c(rep("phq_9", dim(shiny_dat)[1]), rep("gad_7", dim(shiny_dat)[1])))

shiny_dat_month = shiny_dat_month %>%
  mutate(date = floor_date(date, "month")) %>%
  group_by(date, outcome_type) %>%
  summarise(outcome_change_mean = mean(outcome_change))


```
Plot the time series 
```{r}
title_text = c("Changes \n in average<span style='color:#ff8c00'> PHQ-9</span> and 
    <span style='color:#346299'>GAD-7</span> outcome scores \n from Jan-19 to Oct-19")
ggplot(shiny_dat_month, aes(x = date, y = outcome_change_mean, colour = outcome_type)) + 
  geom_line() + 
  geom_point() +
  labs(title =title_text,  y = "Average Outcome Change", x = "Month")+
  theme(legend.position = "none") +
  scale_color_manual(values=c("#346299", "#ff8c00")) +
  theme(plot.title = element_markdown(), axis.title.y = element_blank())+
  ylim(-10,10) +
  theme(text=element_text(family="Verdana", face="bold", size=12)) #Times New Roman, 12pt, Bold

```
Test
```{r}
dat <- data.frame(
    y = 1:3,
    text = c("Changes \n in average<span style='color:#ff8c00'> PHQ-9</span> and 
    <span style='color:#346299'>GAD-7</span> outcome scores \n from Jan-19 to Oct-19")
)

library(ggplot2)
p <- ggplot(dat, aes(x=1, y=y)) + 
       scale_y_continuous(limits=c(0.5, 3.5), breaks=NULL) +
       scale_x_continuous(breaks=NULL)

p + geom_text(aes(label=text))

p + geom_text(aes(label=text), family="Times", fontface="italic", lineheight=.8) +
    annotate(geom="text", x=1, y=1.5, label="Annotation text", colour="red",
             size=7, family="Courier", fontface="bold", angle=30) +
  labs(title = "Changes \n in average<span style='color:#ff8c00'> PHQ-9</span> and 
    <span style='color:#346299'>GAD-7</span> outcome scores from Jan-19 to Oct-19")
```


Create the Cleveland chart
```{r}
## City = type; Gender = pre_post
###### Preping data
self_worth_pre_mean = round(mean(shiny_dat$phq_9_pre),2)
self_worth_post_mean = round(mean(shiny_dat$phq_9_post),2)+3

## GAD-7
grit_pre_mean = round(mean(shiny_dat$gad_7_pre),2)
grit_post_mean = round(mean(shiny_dat$gad_7_post),2)+3

dat_mean = data.frame(dat_mean_all = rbind(self_worth_pre_mean, self_worth_post_mean, grit_pre_mean, grit_post_mean))
dat_mean$pre_post = c("pre", "post", "pre", "post")
dat_mean$type = c("self_worth", "self_worth", "grit", "grit")
dat_mean
####################
library(ggtext)
dat_mean = dat_mean %>%
  mutate(type = case_when(type == "self_worth" ~ "Self Worth", 
          type == "grit" ~ "Grit"))

```
Plot
```{r}
ggplot(dat_mean, aes(dat_mean_all, type, label = dat_mean_all)) +
        geom_line(aes(group = type)) +
        geom_point(aes(color = pre_post, size = 4)) +
        scale_color_manual(values=c("#346299", "#ff8c00")) +
        geom_text(aes(label = dat_mean_all, colour = pre_post), position=position_dodge(width=0.5), vjust=-0.10) +
    theme_classic() +
    labs(title="Improvements in both outcomes", y = "Outcome type", x = "Outcome amount") +
    labs(color = "Pre and Post") +
    theme(legend.position = "none") +
    labs(title = "Difference\nin<span style='color:#ff8c00'> Pre</span> and 
    <span style='color:#346299'>Post</span> outcome scores") +
    theme(plot.title = element_markdown())+
    theme(axis.title.x = element_blank(),axis.title.y = element_blank(), axis.text.x = element_blank(), axis.ticks =  element_blank()) 
```


